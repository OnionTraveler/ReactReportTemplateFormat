[{"/root/OnionSln/react-project/src/index.js":"1","/root/OnionSln/react-project/src/App.js":"2","/root/OnionSln/react-project/src/reportWebVitals.js":"3","/root/OnionSln/react-project/src/Components/index.jsx":"4","/root/OnionSln/react-project/src/Components/SideBar/index.jsx":"5","/root/OnionSln/react-project/src/Components/LayOut/index.jsx":"6","/root/OnionSln/react-project/src/Pages/index.js":"7","/root/OnionSln/react-project/src/Pages/Application1/App1/index.jsx":"8","/root/OnionSln/react-project/src/Pages/Home/index.jsx":"9"},{"size":541,"mtime":1678531957708,"results":"10","hashOfConfig":"11"},{"size":663,"mtime":1678545197857,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1678513171100,"results":"13","hashOfConfig":"11"},{"size":115,"mtime":1678545026453,"results":"14","hashOfConfig":"11"},{"size":6826,"mtime":1678557032328,"results":"15","hashOfConfig":"11"},{"size":687,"mtime":1678556778946,"results":"16","hashOfConfig":"11"},{"size":0,"mtime":1678520910853,"results":"17","hashOfConfig":"11"},{"size":114,"mtime":1678546176232,"results":"18","hashOfConfig":"11"},{"size":114,"mtime":1678546170696,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"tfmzd8",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/root/OnionSln/react-project/src/index.js",[],[],[],"/root/OnionSln/react-project/src/App.js",["51"],[],"/root/OnionSln/react-project/src/reportWebVitals.js",[],[],[],"/root/OnionSln/react-project/src/Components/index.jsx",[],[],"/root/OnionSln/react-project/src/Components/SideBar/index.jsx",["52","53","54","55","56"],[],"import { useState, useEffect } from 'react';\nimport { HashRouter, Link, Switch, Route } from 'react-router-dom';\nimport './style.css';\nimport 'boxicons/css/boxicons.min.css';\n\n\n\nfunction SideBar(props) {\n\n    const sideBarItems = [\n        {\n            itemName: 'Home',\n            itemIcon: (<i className='bx bx-grid-alt' />),\n            itemHyperLink: '/',\n            subItems: []\n        },\n        {\n            itemName: 'Application1',\n            itemIcon: (<i className='bx bx-collection' />),\n            itemHyperLink: '#',\n            subItems: [\n                {\n                    subItemName: 'Dashboard KPI',\n                    subItemHyperLink: '/Application1/App1'\n                },\n                {\n                    subItemName: 'Detail',\n                    subItemHyperLink: '/Application1/App2'\n                }\n            ]\n        },\n        {\n            itemName: 'Application2',\n            itemIcon: (<i className='bx bx-collection' />),\n            itemHyperLink: '#',\n            subItems: [\n                {\n                    subItemName: 'Dashboard KPI',\n                    subItemHyperLink: '/Application2/App1'\n                },\n                {\n                    subItemName: 'Detail',\n                    subItemHyperLink: '/Application2/App2'\n                }\n            ]\n        },\n\n\n\n\n        {\n            itemName: 'Analytics',\n            itemIcon: (<i className='bx bx-pie-chart-alt-2' />),\n            itemHyperLink: '#',\n            subItems: []\n        },\n        {\n            itemName: 'Chart',\n            itemIcon: (<i className='bx bx-line-chart' />),\n            itemHyperLink: '#',\n            subItems: []\n        },\n        {\n            itemName: 'Plugins',\n            itemIcon: (<i className='bx bx-plug' />),\n            itemHyperLink: '#',\n            subItems: [\n                {\n                    subItemName: 'Manual Trigger',\n                    subItemHyperLink: '#'\n                },\n                {\n                    subItemName: 'Other Systems',\n                    subItemHyperLink: '#'\n                },\n                {\n                    subItemName: 'Help',\n                    subItemHyperLink: '#'\n                }\n            ]\n        },\n        {\n            itemName: 'Explore',\n            itemIcon: (<i className='bx bx-compass' />),\n            itemHyperLink: '#',\n            subItems: []\n        },\n        {\n            itemName: 'History',\n            itemIcon: (<i className='bx bx-history' />),\n            itemHyperLink: '#',\n            subItems: []\n        },\n        {\n            itemName: 'Setting',\n            itemIcon: (<i className='bx bx-cog' />),\n            itemHyperLink: '#',\n            subItems: []\n        },\n    ];\n\n\n    useEffect(() => {\n        let arrow = document.querySelectorAll(\".arrow\");\n        for (var i = 0; i < arrow.length; i++) {\n            arrow[i].addEventListener(\"click\", (e) => {\n                let arrowParent = e.target.parentElement.parentElement;//selecting main parent of arrow\n                arrowParent.classList.toggle(\"showMenu\");\n            });\n        }\n\n        let sidebar = document.querySelector(\".sidebar\");\n        let sidebarBtn = document.querySelector(\".bx-menu\");\n        sidebarBtn.addEventListener(\"click\", () => {\n            sidebar.classList.toggle(\"close\");\n        });\n\n        return () => {\n            let arrow = document.querySelectorAll(\".arrow\");\n            for (var i = 0; i < arrow.length; i++) {\n                arrow[i].removeEventListener(\"click\", (e) => {\n                    let arrowParent = e.target.parentElement.parentElement;//selecting main parent of arrow\n                    arrowParent.classList.toggle(\"showMenu\");\n                });\n            }\n\n            let sidebar = document.querySelector(\".sidebar\");\n            let sidebarBtn = document.querySelector(\".bx-menu\");\n            sidebarBtn.removeEventListener(\"click\", () => {\n                sidebar.classList.toggle(\"close\");\n            });\n        };\n    }, []);\n\n\n\n\n    return (\n        <>\n            <div className=\"sidebar close\">\n                <div className=\"logo-details\">\n                    {/* <i className='bx bxl-c-plus-plus'></i> */}\n                    <i className='bx bxs-hot'></i>\n                    <span className=\"logo_name\">HelloOnion</span>\n                </div>\n                <ul className=\"nav-links\">\n                    {\n                        sideBarItems.map((item, index) => (\n                            <li key={index}>\n                                <div className={item.subItems.length === 0 ? null : \"iocn-link\"}>\n                                    <Link to={item.itemHyperLink}>\n                                        {item.itemIcon}\n                                        <span className=\"link_name\">{item.itemName}</span>\n                                    </Link>\n                                    <i className={item.subItems.length === 0 ? null : \"bx bxs-chevron-down arrow\"} ></i>\n                                </div>\n                                <ul className={item.subItems.length === 0 ? \"sub-menu blank\" : \"sub-menu\"}>\n                                    <li><a className=\"link_name\" href=\"#\">{item.itemName}</a></li>\n                                    {\n                                        item.subItems.map((item, index) => (\n                                            <Link to={item.subItemHyperLink} key={index}>\n                                                <li>{item.subItemName}</li>\n                                            </Link>\n                                        ))\n                                    }\n                                </ul>\n                            </li>\n                        ))\n                    }\n\n                    <li>\n                        <div className=\"profile-details\">\n                            <div className=\"profile-content\">\n                                <img src={require('./image/onion.png')} alt=\"profileImg\" />\n                            </div>\n                            <div className=\"name-job\">\n                                <div className=\"profile_name\">OnionTraveler</div>\n                                <div className=\"job\">Web Desginer</div>\n                            </div>\n                            <i className='bx bx-log-out' ></i>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n            <section className=\"home-section\">\n                <div className=\"home-content\">\n                    <i className='bx bx-menu' ></i>\n                    {/* <span className=\"text\">Drop Down Sidebar</span> */}\n                </div>\n                {props.children}\n            </section>\n        </>\n    );\n}\n\nexport default SideBar;\n","/root/OnionSln/react-project/src/Components/LayOut/index.jsx",["57"],[],"import { SideBar } from '../index.jsx';\nimport App1 from '../../Pages/Application1/App1/index.jsx';\nimport Home from '../../Pages/Home/index.jsx';\n// import { HashRouter, Link, Routes, Route } from 'react-router-dom';\nimport { HashRouter, Link, Routes, Route } from 'react-router-dom';\n\n\nfunction Layout() {\n    return (\n        <>\n            <HashRouter>\n                <SideBar>\n                    <Routes>\n                        <Route exact path=\"/\" element={<Home />} />\n                        <Route path=\"/Application1/App1\" element={<App1 />} />\n                    </Routes>\n                </SideBar>\n            </HashRouter>\n        </>\n    );\n}\n\nexport default Layout;\n","/root/OnionSln/react-project/src/Pages/index.js",[],[],"/root/OnionSln/react-project/src/Pages/Application1/App1/index.jsx",[],[],"/root/OnionSln/react-project/src/Pages/Home/index.jsx",[],[],{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":1,"column":10,"nodeType":"60","messageId":"61","endLine":1,"endColumn":18},{"ruleId":"58","severity":1,"message":"63","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":20},{"ruleId":"58","severity":1,"message":"64","line":2,"column":28,"nodeType":"60","messageId":"61","endLine":2,"endColumn":34},{"ruleId":"58","severity":1,"message":"65","line":2,"column":36,"nodeType":"60","messageId":"61","endLine":2,"endColumn":41},{"ruleId":"66","severity":1,"message":"67","line":158,"column":41,"nodeType":"68","endLine":158,"endColumn":75},{"ruleId":"58","severity":1,"message":"69","line":5,"column":22,"nodeType":"60","messageId":"61","endLine":5,"endColumn":26},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'HashRouter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used."]